create table salesman
(salesman_id numeric(5) primary key ,
name varchar(30) not null,
city varchar(15) not null,
commission decimal(5,2) not null);

create table customer
(customer_id numeric(5) primary key,
cust_name varchar(30) not null,
city varchar(10) not null,
grade numeric(3),
salesman_id numeric(5) references salesman(salesman_id) on delete set null);

create table orders
(ord_no numeric(5) primary key,
purch_amt numeric(8,2) not null,
ord_date date not null,
customer_id numeric(5) references customer(customer_id) on delete set null,
salesman_id numeric(5) references salesman(salesman_id) on delete set null);

insert into salesman values(5001,'James Hoog ','New York ',0.15);
insert into salesman values(5002,'Nail Knite','Paris ',0.13);
insert into salesman values(5005,'Pit Alex','London ',0.11);
insert into salesman values(5006,'Mc Lyon','Paris',0.14);
insert into salesman values(5007,'Paul Adam','Rome',0.13);
insert into salesman values(5003,'Lauson Hen','San Jose ',0.12);

insert into customer values(3002,'Nick Rimandov','New York',100,5001);
insert into customer values(3007,'Brad Davis','New York',200,5001);
insert into customer values(3005 ,'Graham Zusi','California ',200,5002);
insert into customer values(3008,'Julian Green','London',300,5002);
insert into customer values(3004,'Fabian Johnson','Paris',300,5006);
insert into customer values(3009,'Geoff Cameron','Berlin',100,5003);
insert into customer values(3003,'Jozy Altidor','Moscow ',200,5007);
insert into customer values(3001,'Brad Guzan','London',NULL, 5005);

insert into orders values(70001 ,150.5 ,'20121005',3005,5002);
insert into orders values(70009,270.65,'20120910',3001,5005);
insert into orders values(70002,65.26,'20121005',3002,5001);
insert into orders values(70004,110.5,'20120817',3009,5003);
insert into orders values(70007,948.5,'20120910',3005,5002);
insert into orders values(70005,2400.6,'20120727',3007 ,5001);
insert into orders values(70008,5760,'20120910',3002,5001);
insert into orders values(70010,1983.43,'20121010',3004,5006);
insert into orders values(70003,2480.4,'20121010',3009,5003);
insert into orders values(70012,250.45,'20120627',3008,5002);
insert into orders values(70011 ,75.29,'20120817',3003,5007);
insert into orders values(70013,3045.6,'20120425',3002,5001);

select * from salesman;
select * from orders;
select * from customer;
 
 drop table orders
 drop table customer
 drop table salesman

/* 1.write a SQL query to find all the orders issued by the salesman 'Paul Adam'.
Return ord_no, purch_amt, ord_date, customer_id and salesman_id */

SELECT *FROM orders
WHERE salesman_id =
  (SELECT salesman_id 
  FROM salesman 
  WHERE name='Paul Adam');

/* 2. write a SQL query to find all the orders, which are generated by those salespeople,
who live in the city of London.Return ord_no, purch_amt, ord_date, customer_id, salesman_id. */

SELECT *FROM orders
WHERE salesman_id IN
    (SELECT salesman_id 
     FROM salesman 
     WHERE city='London');

/*3.write a SQL query to find the orders generated by the salespeople who works for customers whose id is 3007.
Return ord_no, purch_amt, ord_date, customer_id, salesman_id. A customer can works only with a salespeople*/

SELECT *FROM orders
WHERE salesman_id =
    (SELECT DISTINCT salesman_id 
     FROM orders 
     WHERE customer_id =3007);

/*4.write a SQL query to find the order values greater than the average order value of 10th October 2012.
    Return ord_no, purch_amt, ord_date, customer_id, salesman_id.*/

SELECT *FROM orders
WHERE purch_amt >
    (SELECT  AVG(purch_amt) 
     FROM orders 
     WHERE ord_date ='10/10/2012');

/*5. write a SQL query to find all the orders generated in New York city.
Return ord_no, purch_amt, ord_date, customer_id and salesman_id */

SELECT *FROM orders
WHERE salesman_id IN
    (SELECT salesman_id 
     FROM salesman 
     WHERE city ='New York');

/*6. write a SQL query to find the salespeople who had more than one customer. Return salesman_id and name*/

SELECT salesman_id,name 
FROM salesman a 
WHERE 1 < 
    (SELECT COUNT(*) 
     FROM customer 
     WHERE salesman_id=a.salesman_id);

/*7. write a SQL query to find those orders, which are higher than average amount of the orders.
Return ord_no, purch_amt, ord_date, customer_id and salesman_id*/

SELECT * 
FROM orders a
WHERE purch_amt >
    (SELECT AVG(purch_amt) FROM orders b 
     WHERE b.customer_id = a.customer_id);

/*8. Write a query to find the sums of the amounts from the orders table, grouped by date,
eliminating all those dates where the sum was not at least 1000.00 above the maximum order amount for that date*/

SELECT ord_date, SUM (purch_amt)
FROM orders a
GROUP BY ord_date
HAVING SUM (purch_amt) >
    (SELECT 1000.00 + MAX(purch_amt) 
     FROM orders b 
     WHERE a.ord_date = b.ord_date);

/*9. Write a query to extract all data from the customer table 
if and only if one or more of the customers in the customer table are located in London.*/

SELECT customer_id,cust_name, city
FROM customer
WHERE EXISTS
   (SELECT *
    FROM customer 
    WHERE city='London');

/*10. write a SQL query to find the salespeople who deal multiple customers. 
      Return salesman_id, name, city and commission*/
 SELECT * FROM salesman 
WHERE salesman_id IN ( SELECT DISTINCT salesman_id 
FROM customer a 
WHERE EXISTS ( SELECT * 
      FROM customer b 
      WHERE b.salesman_id=a.salesman_id 
      AND b.cust_name<>a.cust_name));


